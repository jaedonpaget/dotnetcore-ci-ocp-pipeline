tasks:
  - name: fetch-repository
    params:
      - name: URL
        value: $(params.GIT_REPO)
      - name: revision
        value: $(params.GIT_REVISION)
      - name: deleteExisting
        value: 'true'
    taskRef:
      params:
        - name: kind
          value: task
        - name: name
          value: git-clone
        - name: namespace
          value: openshift-pipelines
      resolver: cluster
    workspaces:
      - name: output
        workspace: workspace

  - name: build-and-push
    params:
      - name: IMAGE
        value: $(params.IMAGE_NAME)
      - name: DOCKERFILE
        value: ./Dockerfile
      - name: TLSVERIFY
        value: 'false'
      - name: CONTEXT
        value: $(params.PATH_CONTEXT)
    runAfter:
      - fetch-repository
    taskRef:
      params:
        - name: kind
          value: task
        - name: name
          value: buildah
        - name: namespace
          value: openshift-pipelines
      resolver: cluster
    workspaces:
      - name: source
        workspace: workspace

  - name: git-update-deployment
    params:
      - name: GIT_REPOSITORY
        value: $(params.CONFIG_GIT_REPO)
      - name: CURRENT_IMAGE
        value: $(params.IMAGE_NAME)
      - name: NEW_IMAGE
        value: $(params.IMAGE_NAME)
      - name: NEW_DIGEST
        value: $(tasks.build-and-push.results.IMAGE_DIGEST)
      - name: KUSTOMIZATION_PATH
        value: environments/dev
      - name: GIT_REF
        value: $(params.CONFIG_GIT_REVISION)
    runAfter:
      - build-and-push
    taskRef:
      kind: Task
      name: git-update-deployment
    workspaces:
      - name: workspace
        workspace: workspace
